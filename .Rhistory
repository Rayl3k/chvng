grouped <- summarise(df, homeAfterPurchase = sum(homeAfterPurchase), purchased = sum(purchased))
round(grouped[1]/grouped[2]*100, digits=2)
View(df)
save(dd, df, file="data.RData")
source('~/R Projects/20160725_purchasersToHome/purchasersToHome.R')
load(file="data.RData")
View(dd)
View(df)
partitions <- c("FC-1:1/FC-2:1/FC-3:2/FC-4:1/FC-5:2/FC-6:2/FC-7:1/FI-1:1/FI-2:3/FI-3:2/FI-4:1/FI-5:1/FI-6:1/FI-7:2/FR1-1:1",
"FR1-2:1/FR1-3:1/FR1-4:1/FR1-5:1/FR1-6:2/FR1-7:1/FR2-1:1/FR2-2:1/FR2-3:1/FR2-4:1/FR2-5:1/FR2-6:1/FR2-7:1/OF1-1:1/OF1-2:1",
"OF1-3:4/OF1-4:2/OF1-5:1/OF1-6:2/OF1-7:1/PL1-1:2/PL1-2:3/PL1-3:2/PL1-4:1/PL1-5:2/PL1-6:2/PL1-7:1/PL2-1:2/PL2-2:3/PL2-3:3",
"PL2-4:1/PL2-5:2/PL2-6:2/PL2-7:2/PL3-1:1/PL3-2:1/PL3-3:2/PL3-4:1/PL3-5:3/PL3-6:1/PL3-7:3/PL4-1:1/PL4-2:3/PL4-3:4/PL4-4:1",
"PL4-5:1/PL4-6:1/PL4-7:2/PL5-1:1/PL5-2:1/PL5-3:1/PL5-4:1/PL5-5:4/PL5-6:2/PL5-7:1/PL6-1:1/PL6-2:1/PL6-3:1/PL6-4:1/PL6-5:2",
"PL6-6:1/PL6-7:1/PR-1:2/PR-2:2/PR-3:3/PR-4:3/PR-5:2/PR-6:1/PR-7:2/UX1-1:3/UX1-2:2/UX1-3:1/UX1-4:4/UX1-5:1/UX1-6:1",
"UX1-7:1/UX2-1:2/UX2-2:1/UX2-3:4/UX2-4:2/UX2-5:1/UX2-6:2/UX2-7:2/UX3-1:4/UX3-2:2/UX3-3:2/UX3-4:2/UX3-5:2/UX3-6:2/UX3-7:2")
library(dplyr)
library(tidyr)
library(googlesheets)
setwd("~/GitHub/chvng")
source("processData.R")
source("plottingData.R")
# ===================================================================== #
# READY TO PLAY                                                         #
# ===================================================================== #
processWeeks(5)
View(teams)
resultsComparison(1, 8)
library(ggplot2)
resultsComparison(1, 8)
require(dplyr)
names(Teams)
names(teams)
x <- filter(teams, id==1)
names(details)
x <- filter(details <- team == 1)
x <- filter(details, team == 1)
View(x)
mean(X$gf)
mean(x$gf)
mean(x$gc)
dd <- filter(details, team %in% c(x, y))
x <- 1
y <- 8
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
View(dd)
names(dd)
dd <- group_by("team", "teamName") %>% summarise(gf=sum(gf), gc=sum(gc))
dd <- group_by(dd, "team", "teamName") %>% summarise(gf=sum(gf), gc=sum(gc))
View(dd)
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
names(dd)[12] <- "teamName"
# prepare data
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
names(dd)[12] <- "teamName"
Ã‡View(View(dd))
View(Dd)
View(dd)
dd <- filter(details, team %in% c(x, y))
View(dd)
dd <- left_join(dd, teams, by=c("team"="id"))
View(dd)
dd <- group_by(dd, team, teamName) %>% summarise(gf=sum(gf), gc=sum(gc))
View(teams)
View(dd)
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
View(dd)
ggplot(dd, aes(teamName, gf)) + geom_boxplot()
ggplot(dd, aes(teamName, gc)) + geom_boxplot()
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2)
ggplot(dd, aes(teamName, gc)) + geom_boxplot() + geom_jitter(width=0.2)
names(dd)
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win)
ggplot(dd, aes(teamName, gc)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win)
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
+ theme(axis.title.y = "Gols a favor", axis.title = "Goals a favor si Perdut(0) o Guanyat(1)")
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
+ labs(title = "Goals a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor")
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
+ labs(title = "Goals a favor si Perdut(0) o Guanyat(1)")
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
+ labs(title = "Goals a favor si Perdut o Guanyat") + ylab("Gols a Favor")
ot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
labs(title = "Goals a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor")
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
labs(title = "Goals a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor")
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
labs(title = "Goals a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(1.5)))
# boxplots + facets
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
labs(title = "Goals a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
?seq
seq(0, 60, by=5)
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 5)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 5), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
# boxplots + facets
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter(width=0.2) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
View(dd)
ggplot(dd, aes(teamName, gf)) + geom_boxplot() + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gc)) + geom_boxplot() + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
ggplot(dd, aes(teamName, gc)) + geom_boxplot() + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gc)) + geom_boxplot() + geom_jitter(outlier.shape=NA) + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gc)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gf)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, gc)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(. ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
library(tidyr)
?gather
names(dd)
x <- gather(dd, "gf", "gc")
View(x)
x <- gather(dd, "category", "goals", 5:6)
View(x)
dd <- gather(dd, "category", "goals", 5:6)
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor(gf) i en contra (gc), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(win ~ category) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor(gf) i en contra (gc), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(win ~ category) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols a favor(gf) i en contra (gc), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(win ~ category) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
# boxplot
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
resultsComparison(1, 8)
View(teams)
resultsComparison(1, 8)
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max(diff), max(diff))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = 0, 100, by = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(0, 100, by = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x,y)
}
computeGame(1,8)
computeGame(1,8)
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x,y)
}
computeGame(1,8)
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x, y)
}
computeGame(1,8)
# Compare goals data
goalsComparison <- function(x, y) {
# get data for teams selected + get their names
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
# transform for better plotting
dd <- gather(dd, "category", "goals", 5:6)
# boxplot
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
}
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x, y)
}
computeGame(1, 8)
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x, y)
}
computeGame(1, 8)
resultsComparison(1, 8)
x <- 1
y <- 8
resultsComparison(x, y)
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
resultsComparison(x, y)
goalsComparison(x, y)
}
computeGame(1, 8)
plot1 = resultsComparison(x, y)
plot1
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
plot1 <<- resultsComparison(x, y)
plot2 <<- goalsComparison(x, y)
plot1
plot2
}
computeGame(x, y)
plot1
plot2
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
plot1 <<- resultsComparison(x, y)
plot2 <<- goalsComparison(x, y)
}
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
plot <- ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
# Compare goals data
goalsComparison <- function(x, y) {
# get data for teams selected + get their names
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
# transform for better plotting
dd <- gather(dd, "category", "goals", 5:6)
# boxplot
plot <- ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
}
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
plot1 <<- resultsComparison(x, y)
plot2 <<- goalsComparison(x, y)
}
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
plot <- ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
plot
}
# Compare goals data
goalsComparison <- function(x, y) {
# get data for teams selected + get their names
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
# transform for better plotting
dd <- gather(dd, "category", "goals", 5:6)
# boxplot
plot <- ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
plot
}
computeGame(1, 8)
plot1
plot2
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
plot1 <<- resultsComparison(x, y)
plot2 <<- goalsComparison(x, y)
}
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(yintercept=0)
}
# Compare goals data
goalsComparison <- function(x, y) {
# get data for teams selected + get their names
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
# transform for better plotting
dd <- gather(dd, "category", "goals", 5:6)
# boxplot
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols a Favor") +
theme(plot.title = element_text(size=rel(2)))
}
computeGame(1, 8)
plot1
plot2
## CHECK EVERYTHING ##
computeGame <- function(x, y) {
plot1 <<- resultsComparison(x, y)
plot2 <<- goalsComparison(x, y)
}
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Diferencia de gols") + xlab("rival") +
labs(title = "Comparativa de diferencia de gols vs rivals")
geom_hline(yintercept=0)
}
computeGame(1, 8)
plot1
resultsComparison(1, 8)
# Compare results of people that played with each team
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Diferencia de gols") + xlab("rival") +
labs(title = "Comparativa de diferencia de gols vs rivals") +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
resultsComparison <- function(x, y) {
dd <- filter(details, team %in% c(x, y)) %>% mutate(diff = gf-gc)
dd <- left_join(dd, teams, by = c("team" = "id"))
dd <- left_join(dd, teams, by = c("versus" = "id"))
names(dd)[12] <- "localName"
names(dd)[13] <- "visitName"
max = max(dd$diff)
ggplot(dd, aes(x=visitName, y=diff, fill=localName, group=localName)) + geom_bar(stat="identity", position="dodge") +
scale_y_continuous(limits = c(-max, max), breaks = seq(-100, 100, by = 5), minor_breaks = seq(-100, 100, by=1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), plot.title = element_text(size=rel(2))) + ylab("Diferencia de gols") + xlab("rival") +
labs(title = "Comparativa de diferencia de gols vs rivals") +
geom_hline(yintercept=0)
}
resultsComparison(1, 8)
# Compare goals data
goalsComparison <- function(x, y) {
# get data for teams selected + get their names
dd <- filter(details, team %in% c(x, y))
dd <- left_join(dd, teams, by=c("team"="id"))
# transform for better plotting
dd <- gather(dd, "category", "goals", 5:6)
# boxplot
ggplot(dd, aes(teamName, goals)) + geom_boxplot(outlier.shape=NA) + geom_jitter() + facet_grid(category ~ win) +
scale_y_continuous(breaks=seq(0, 100, by = 1), minor_breaks=seq(0, 100, by = 1)) +
labs(title = "Gols en contra(gc) i a favor(gf), si Perdut(0) o Guanyat(1)") + ylab("Gols") +
theme(plot.title = element_text(size=rel(2)))
}
View(details)
